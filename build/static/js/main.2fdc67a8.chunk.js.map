{"version":3,"sources":["helper/web3client.js","helper/account.js","components/loginButton.js","components/dashboard/index.js","landing.js","index.js"],"names":["web3","require","Web3","window","ethereum","provider","init","a","request","method","then","accounts","catch","err","code","localStorage","removeItem","location","reload","on","new_accounts","console","log","getAccount","block","account","eth","getAccounts","error","result","getBalance","address","balance","sign_in","blockchain","setItem","show_balance","self","setState","utils","fromWei","LoginButton","useState","show","setShow","Button","variant","onClick","Modal","onHide","backdrop","fullscreen","Header","closeButton","className","Body","style","fontSize","data-currencyid","data-base","data-secondary","data-ticker","data-rank","data-marketcap","data-volume","data-statsticker","data-stats","Footer","type","Dashboard","showBalance","setShowBalance","getAddress","setAddress","setBalance","useEffect","getItem","undefined","myBalance","state","width","marginTop","Table","striped","hover","responsive","marginLeft","float","Landing","props","darkBackgroundModes","lightBackgroundModes","backgroundType","Configs","appClass","plainBackgroundMode","devIntro","devDesc","backgroundMode","backgroundIndex","bgStyle","icons","this","bg","href","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fdc67a8.chunk.js","sourcesContent":["import Web3 from \"web3\";\nimport QuotriContract from \"contracts/Quotri.json\";\n\nconst Contract = require(\"web3-eth-contract\");\nlet web3 = new Web3(window.ethereum);\n\nlet current_account;\nlet initial = false;\nlet provider = window.ethereum;\n\nexport const init = async () => {\n  if (typeof provider !== \"undefined\") {\n    //set current account\n    provider\n      .request({ method: \"eth_requestAccounts\" })\n      .then((accounts) => {\n        current_account = accounts[0];\n      })\n      .catch((err) => {\n        if (err.code == -32002) {\n          localStorage.removeItem(\"address\");\n          window.location.reload();\n        }\n        return;\n      });\n\n    //change to other account\n    provider.on(\"accountsChanged\", (new_accounts) => {\n      current_account = new_accounts;\n      window.location.reload();\n      console.log(\"changed account to \", new_accounts);\n    });\n  }\n\n  //set provider\n  web3 = new Web3(provider);\n\n  //initialize finish\n  initial = true;\n  if (!initial) {\n    await init();\n  }\n  return web3;\n};\n\nexport const getAccount = async (block) => {\n  const account = block.eth.getAccounts(function (error, result) {\n    if (!error) return result[0];\n  });\n\n  return account;\n};\n\nexport const getBalance = async (address, block) => {\n  const balance = block.eth.getBalance(address, function (error, result) {\n    if (!error) return result;\n  });\n  return balance;\n};\n\nexport const getQuoteById = async (id) => {\n  init();\n  console.log(\"connected to quotri contract \");\n\n  Contract.setProvider(provider);\n\n  const contract = new Contract(\n    QuotriContract.abi,\n    QuotriContract.networks[5777].address\n  );\n\n  return contract.methods.quotes(id).call();\n};\n\nexport const createNewQuote = async (address, content) => {\n  init();\n  console.log(\"ready for add quotes\");\n\n  Contract.setProvider(provider);\n\n  const contract = new Contract(\n    QuotriContract.abi,\n    QuotriContract.networks[5777].address\n  );\n\n  return contract.methods\n    .createQuote(content)\n    .send({ from: address })\n    .on(\"receipt\", function () {\n      console.log(\"kutipan berhasil ditambahkan\");\n    });\n};\n","import {\n  init,\n  getAccount,\n  getQuoteById,\n  createNewQuote,\n  getBalance,\n} from \"./web3client\";\n\nexport const sign_in = async () => {\n  try {\n    const blockchain = await init();\n    if (blockchain) {\n      const address = await getAccount(blockchain);\n      localStorage.setItem(\"address\", address[0]);\n      window.location.reload();\n    }\n  } catch (err) {\n    console.error(\"sign in: \", err);\n  }\n};\n\nexport const sign_out = () => {\n  localStorage.removeItem(\"address\");\n  window.location.reload();\n};\n\nexport const show_balance = async (self, address) => {\n  try {\n    const blockchain = await init();\n    const balance = await getBalance(address, blockchain);\n    self.setState({\n      account: { balance: blockchain.utils.fromWei(balance, \"ether\") },\n    });\n  } catch (e) {\n    console.error('show balance: ', e)\n  }\n};\n\nexport const add_quote = async (self) => {\n  if (localStorage.getItem(\"address\") && self.state.quotes.content) {\n    if (window.confirm(\"tambahkan kutipan ini?\")) {\n      try {\n        await createNewQuote(\n          localStorage.getItem(\"address\"),\n          self.state.quotes.content\n        );\n        alert(\"kamu berhasil menambah 1 Quotri ke blockchain\");\n        self.setState({ quotes: { content: \"\" } }, () => {\n          window.location.reload();\n        });\n      } catch (error) {\n        if (error.code === 4001) alert(\"transaksi blockchain telah dibatalkan\");\n        window.location.reload();\n      }\n    }\n  } else {\n    alert(\"kamu tidak punya akses, silahkan KLIK TOMBOL MASUK\");\n  }\n};\n\nexport const get_quote = async (self) => {\n  if (localStorage.getItem(\"address\")) {\n    const quote = await getQuoteById(1);\n    self.setState({ quotes: { content: quote.content } });\n  } else {\n    alert(\"tidak ada akses!\");\n  }\n};\n\nexport const set_content = (self, value) => {\n  self.setState({ quotes: { content: value } });\n};\n","import React, { useState } from \"react\";\nimport { sign_in } from \"../helper/account\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nexport default function LoginButton(self) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button variant=\"danger\" onClick={handleShow}>\n        Coba Sekarang!\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop={false}\n        fullscreen={true}\n      >\n        <Modal.Header closeButton>\n          <span>\n            <i className=\"fa fa-key ml-2\"></i> Single-Sign-In\n          </span>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <p>Anda akan menggunakan fitur masuk tanpa daftar</p>\n            <i className=\"h6\" style={{ fontSize: 12 }}>\n              karena sistem blockchain bersifat tidak terpusat, maka anda punya\n              hak penuh atas keterbukaan sistem sehingga pihak lain tidak bisa\n              menyimpan data pribadi anda.\n            </i>\n          </div>\n          <div>\n            <div\n              className=\"coinmarketcap-currency-widget\"\n              data-currencyid=\"1027\"\n              data-base=\"IDR\"\n              data-secondary=\"USD\"\n              data-ticker=\"true\"\n              data-rank=\"true\"\n              data-marketcap=\"true\"\n              data-volume=\"true\"\n              data-statsticker=\"true\"\n              data-stats=\"IDR\"\n            ></div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            type=\"button\"\n            onClick={() => sign_in()}\n            className=\"btn btn-danger btn-lg w-100\"\n          >\n            Masuk\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { show_balance } from \"../../helper/account\";\nconst Dashboard = ({ self }) => {\n  const [showBalance, setShowBalance] = useState(false);\n  const [getAddress, setAddress] = useState(\"\");\n  const [getBalance, setBalance] = useState(0);\n\n  useEffect(() => {\n    if (\n      localStorage.getItem(\"address\") &&\n      localStorage.getItem(\"address\") !== undefined\n    ) {\n      setAddress(localStorage.getItem(\"address\"));\n    }\n  }, []);\n\n  const myBalance = async () => {\n    try {\n      await show_balance(self, getAddress);\n      setBalance(self.state.account.balance);\n      setShowBalance(!showBalance);\n    } catch (e) {\n      console.error(\"myBalance \", e);\n    }\n  };\n\n  return (\n    <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n      <span style={{ fontSize: \"20px\" }}>Info Akun</span>\n      <Table striped hover variant=\"dark\" responsive={\"xl\"}>\n        <thead>\n          <tr style={{ fontSize: \"20\" }}>\n            <th>Alamat Blockchain</th>\n            <th>Saldo Ethereum</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr style={{ fontSize: \"16px\" }}>\n            <td>{getAddress}</td>\n            <td>\n              <div>\n                {showBalance ? getBalance + \" ETH\" : \"xx,xx ETH\"}\n                <i\n                  className={showBalance ? \"fa fa-eye-slash\" : \"fa fa-eye\"}\n                  onClick={() => myBalance()}\n                  style={{ marginLeft: 2, fontSize: \"20px\", float: \"right\" }}\n                ></i>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport Typist from \"react-typist\";\nimport Configs from \"./helper/configuration.json\";\nimport ParticlesBg from \"particles-bg\";\nimport LoginButton from \"./components/loginButton\";\nimport Dashboard from \"./components/dashboard\";\nimport \"./style/landing.css\";\nclass Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      darkBackgroundModes: [\n        \"day\",\n        \"terminal\",\n        \"torquoise\",\n        \"alizarin\",\n        \"amythyst\",\n        \"carrot\",\n        \"peterriver\",\n      ],\n      lightBackgroundModes: [\n        \"night\",\n        \"lightred\",\n        \"lightpurple\",\n        \"lightgreen\",\n        \"lightblue\",\n        \"lightyellow\",\n      ],\n      backgroundType: Configs.backgroundType || \"plain\",\n      appClass: Configs.plainBackgroundMode || \"daylight\",\n      devIntro: Configs.devIntro || \"Lorem Ipsum\",\n      devDesc:\n        Configs.devDesc ||\n        \"Aute veniam ut deserunt cillum irure pariatur Lorem dolore anim nostrud quis veniam elit culpa.\",\n      backgroundMode: \"default\",\n      backgroundIndex: 0,\n      bgStyle: {},\n      icons: Configs.icons || [],\n      account: {\n        address: localStorage.getItem(\"address\"),\n        balance: 0,\n      },\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const { appClass, bgStyle, backgroundMode, devIntro, devDesc, icons } =\n      this.state;\n\n    return (\n      <div className={appClass} style={bgStyle}>\n        <div className={backgroundMode}>\n          <main className=\"App-main\">\n            <ParticlesBg type=\"thick\" bg={true} />\n            <div className=\"container\">\n              <h1 className=\"intro\">{devIntro}</h1>\n              <div className=\"shell\">Your Quote is on Web 3.0 now!</div>\n              <div className=\"tagline\">\n                <Typist>{devDesc}</Typist>\n              </div>\n              {/* <InputQuote self={this} /> */}\n              <LoginButton self={this} />\n              <Dashboard self={this} />\n              <div className=\"icons-social mt-5\">\n                <p className=\"h6 text-muted\">\n                  powered by <a href=\"#\">dea &amp; team</a>\n                </p>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","// file: src/index.jsx\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Quotes from \"./quotes.js\";\nimport Landing from \"./landing.js\";\nimport \"./style/index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst title = \"Quotri\";\n\nReactDOM.render(\n  <div>\n    {/* <Quotes title={title} /> */}\n    <Landing/>\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}